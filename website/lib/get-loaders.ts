import type { LoaderCategories, LoaderProps } from '@/types';
import { memoizer } from './utils';

const _ = (
    category: LoaderCategories,
    name: string,
    speed: number,
    keyframes: string[],
): LoaderProps => ({ category, name, speed, keyframes });

const loaders = [
    _("Arrows", "arrows_1", 100, ["Рєљ", "Рєќ", "РєЉ", "РєЌ", "Рєњ", "Рєў", "РєЊ", "РєЎ"]),
    _("Arrows", "arrows_2", 80, ["Ргє№ИЈ ", "РєЌ№ИЈ ", "РъА№ИЈ ", "Рєў№ИЈ ", "РгЄ№ИЈ ", "РєЎ№ИЈ ", "РгЁ№ИЈ ", "Рєќ№ИЈ "]),
    _("Arrows", "arrows_3", 120, ["Рќ╣Рќ╣Рќ╣Рќ╣Рќ╣", "РќИРќ╣Рќ╣Рќ╣Рќ╣", "Рќ╣РќИРќ╣Рќ╣Рќ╣", "Рќ╣Рќ╣РќИРќ╣Рќ╣", "Рќ╣Рќ╣Рќ╣РќИРќ╣", "Рќ╣Рќ╣Рќ╣Рќ╣РќИ"]),
    _("Arrows", "arrows_4", 100, ['РЄљ', 'РЄЉ', 'РЄњ', 'РЄЊ']),
    _("Arrows", "arrows_5", 100, ['РєЉ', 'Рєњ', 'РєЊ', 'Рєљ']),
    _("Bars", "bars_1", 80, ["[    ]", "[=   ]", "[==  ]", "[=== ]", "[====]", "[ ===]", "[  ==]", "[   =]", "[    ]", "[   =]", "[  ==]", "[ ===]", "[====]", "[=== ]", "[==  ]", "[=   ]"]),
    _("Bars", "bars_2", 80, ["|_РЌЈ____|", "|__РЌЈ___|", "|___РЌЈ__|", "|____РЌЈ_|", "|_____РЌЈ|", "|____РЌЈ_|", "|___РЌЈ__|", "|__РЌЈ___|", "|_РЌЈ____|", "|РЌЈ_____|"]),
    _("Bars", "bars_3", 17, ["РќѕРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќѕРќѕРќЂРќЂРќЂРќЂРќЂРќЂ", "РќѕРќѕРќѕРќЂРќЂРќЂРќЂРќЂ", "РќѕРќѕРќѕРќѕРќЂРќЂРќЂРќЂ", "РќѕРќѕРќѕРќѕРќѕРќѕРќЂРќЂ", "РќѕРќѕРќѕРќѕРќѕРќѕРќЂРќЂ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќЂ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќЂРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќЂРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќЂРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќЂРќЂРќѕРќѕРќѕРќѕРќѕРќѕ", "РќЂРќЂРќЂРќѕРќѕРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќѕРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќѕРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќѕРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќЂРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќЂРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќѕ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќѕ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќѕРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќѕРќѕРќЂРќЂРќЂРќЂРќЂРќЂ", "РќѕРќѕРќЂРќЂРќЂРќЂРќЂРќЂ", "РќѕРќѕРќѕРќЂРќЂРќЂРќЂРќЂ", "РќѕРќѕРќѕРќѕРќЂРќЂРќЂРќЂ", "РќѕРќѕРќѕРќѕРќѕРќЂРќЂРќЂ", "РќѕРќѕРќѕРќѕРќѕРќЂРќЂРќЂ", "РќѕРќѕРќѕРќѕРќѕРќѕРќЂРќЂ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќЂРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќЂРќѕРќѕРќѕРќѕРќѕРќѕРќѕ", "РќЂРќЂРќЂРќѕРќѕРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќѕРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќЂРќѕРќѕ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ", "РќЂРќЂРќЂРќЂРќЂРќЂРќЂРќЂ"]),
    _("Bars", "bars_4", 100, ['|РќѕРќѕРќѕРќѕРќѕ|', '|РќѕРќѕРќѕРќѕ|', '|РќѕРќѕРќѕ|', '|РќѕРќѕ|', '|Рќѕ|', '||', '|Рќѕ|', '|РќѕРќѕ|', '|РќѕРќѕРќѕ|', '|РќѕРќѕРќѕРќѕ|', '|РќѕРќѕРќѕРќѕРќѕ|']),
    _("Bars", "bars_5", 100, ['|Рќѕ||||', '||Рќѕ|||', '|||Рќѕ||', '||||Рќѕ|', '||||Рќѕ|', '|||Рќѕ||', '||Рќѕ|||', '|Рќѕ||||']),
    _("Circles", "arc", 100, ["РЌю", "РЌа", "РЌЮ", "РЌъ", "РЌА", "РЌЪ"]),
    _("Circles", "balloon_1", 140, [".", "o", "O", "@", "*"]),
    _("Circles", "balloon_2", 120, [".", "o", "O", "┬░", "O", "o", "."]),
    _("Circles", "circle_1", 120, ["РЌА", "РіЎ", "РЌа"]),
    _("Circles", "circle_2", 50, ["РЌљ", "РЌЊ", "РЌЉ", "РЌњ"]),
    _("Circles", "circle_3", 120, ["РЌ┤", "РЌи", "РЌХ", "РЌх"]),
    _("Dots", "dots_1", 80, ["РаІ", "РаЎ", "Ра╣", "РаИ", "Ра╝", "Ра┤", "Рад", "РаД", "РаЄ", "РаЈ"]),
    _("Dots", "dots_2", 80, ["РБЙ", "РБй", "РБ╗", "Рб┐", "РА┐", "РБЪ", "РБ»", "РБи"]),
    _("Dots", "dots_3", 80, ["РаІ", "РаЎ", "Раџ", "Раъ", "Раќ", "Рад", "Ра┤", "Ра▓", "Ра│", "РаЊ"]),
    _("Dots", "dots_4", 80, ["Раё", "Рає", "РаЄ", "РаІ", "РаЎ", "РаИ", "Ра░", "Раа", "Ра░", "РаИ", "РаЎ", "РаІ", "РаЄ", "Рає"]),
    _("Dots", "dots_5", 80, ["РаІ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ"]),
    _("Dots", "dots_6", 80, ["РаЂ", "РаЅ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рац", "Раё", "Раё", "Рац", "Ра┤", "Ра▓", "Рањ", "Раѓ", "Раѓ", "Рањ", "Раџ", "РаЎ", "РаЅ", "РаЂ"]),
    _("Dots", "dots_7", 80, ["Раѕ", "РаЅ", "РаІ", "РаЊ", "Рањ", "Раљ", "Раљ", "Рањ", "Раќ", "Рад", "Рац", "Раа", "Раа", "Рац", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ", "РаЅ", "Раѕ"]),
    _("Dots", "dots_8", 80, ["РаЂ", "РаЂ", "РаЅ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рац", "Раё", "Раё", "Рац", "Раа", "Раа", "Рац", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ", "РаЅ", "Раѕ", "Раѕ"]),
    _("Dots", "dots_9", 80, ["Рб╣", "Рб║", "Рб╝", "РБИ", "РБЄ", "РАД", "РАЌ", "РАЈ"]),
    _("Dots", "dots_10", 80, ["Рбё", "Рбѓ", "РбЂ", "РАЂ", "РАѕ", "РАљ", "РАа"]),
    _("Dots", "dots_11", 100, ["РаЂ", "Раѓ", "Раё", "РАђ", "Рбђ", "Раа", "Раљ", "Раѕ"]),
    _("Dots", "dots_12", 80, ["РбђРађ", "РАђРађ", "РаёРађ", "РбѓРађ", "РАѓРађ", "РаЁРађ", "РбЃРађ", "РАЃРађ", "РаЇРађ", "РбІРађ", "РАІРађ", "РаЇРаЂ", "РбІРаЂ", "РАІРаЂ", "РаЇРаЅ", "РаІРаЅ", "РаІРаЅ", "РаЅРаЎ", "РаЅРаЎ", "РаЅРаЕ", "РаѕРбЎ", "РаѕРАЎ", "РбѕРаЕ", "РАђРбЎ", "РаёРАЎ", "РбѓРаЕ", "РАѓРбў", "РаЁРАў", "РбЃРае", "РАЃРбљ", "РаЇРАљ", "РбІРаа", "РАІРбђ", "РаЇРАЂ", "РбІРаЂ", "РАІРаЂ", "РаЇРаЅ", "РаІРаЅ", "РаІРаЅ", "РаЅРаЎ", "РаЅРаЎ", "РаЅРаЕ", "РаѕРбЎ", "РаѕРАЎ", "РаѕРаЕ", "РађРбЎ", "РађРАЎ", "РађРаЕ", "РађРбў", "РађРАў", "РађРае", "РађРбљ", "РађРАљ", "РађРаа", "РађРбђ", "РађРАђ"]),
    _("Dots", "dots_13", 80, ["РБ╝", "РБ╣", "Рб╗", "Ра┐", "РАЪ", "РБЈ", "РБД", "РБХ"]),
    _("Dots", "dots_14", 80, ["РаЅРаЅ", "РаѕРаЎ", "РађРа╣", "РађРбИ", "РађРБ░", "РбђРБа", "РБђРБђ", "РБёРАђ", "РБєРађ", "РАЄРађ", "РаЈРађ", "РаІРаЂ"]),
    _("Dots", "dots_15", 80, ["Рбј ", "РајРаЂ", "РаіРаЉ", "РаѕРа▒", " РА▒", "РбђРА░", "РбёРАа", "РбєРАђ"]),
    _("Dots", "dots_16", 80, ["РаЂ", "Раѓ", "Раё", "РАђ", "РАѕ", "РАљ", "РАа", "РБђ", "РБЂ", "РБѓ", "РБё", "РБї", "РБћ", "РБц", "РБЦ", "РБд", "РБ«", "РБХ", "РБи", "РБ┐", "РА┐", "Ра┐", "РбЪ", "РаЪ", "РАЏ", "РаЏ", "РаФ", "РбІ", "РаІ", "РаЇ", "РАЅ", "РаЅ", "РаЉ", "РаА", "РбЂ"]),
    _("Dots", "dots_17", 120, ["РаЂ", "Раѓ", "Раё", "Раѓ"]),
    _("Emojis", "car", 200, ["_______", "______­ЪЈј№ИЈ", "_____­ЪЈј№ИЈ_", "____­ЪЈј№ИЈ__", "___­ЪЈј№ИЈ­Ъње_", "__­ЪЈј№ИЈ­Ъње__", "_­ЪЈј№ИЈ­Ъње___", "­ЪЈј№ИЈ_____", "_______"]),
    _("Emojis", "ship", 100, ["_______", "______­Ъџџ", "_____­Ъџџ_", "____­Ъџџ__", "___­Ъџџ__", "__­Ъџџ___", "_­Ъџџ____", "­Ъџџ_____", "_______"]),
    _("Emojis", "clock", 100, ["­ЪЋЏ ", "­ЪЋљ ", "­ЪЋЉ ", "­ЪЋњ ", "­ЪЋЊ ", "­ЪЋћ ", "­ЪЋЋ ", "­ЪЋќ ", "­ЪЋЌ ", "­ЪЋў ", "­ЪЋЎ ", "­ЪЋџ "]),
    _("Emojis", "earth", 180, ["­ЪїЇ ", "­Ъїј ", "­ЪїЈ "]),
    _("Emojis", "hearts", 100, ["­ЪњЏ ", "­ЪњЎ ", "­Ъњю ", "­Ъњџ ", "РЮц№ИЈ "]),
    _("Emojis", "italian", 200, ["­ЪФ┤", "­Ъцї", "­Ъцї", "­Ъцї", "­ЪЉї"]),
    _("Emojis", "monkey", 300, ["­ЪЎѕ ", "­ЪЎѕ ", "­ЪЎЅ ", "­ЪЎі "]),
    _("Emojis", "pastel", 200, ["­Ъћ┤ ", "­ЪЪб ", "­Ъћх ", "Рџф№ИЈ ", "­ЪЪц ", "­ЪЪА ", "­ЪЪБ ", "­ЪЪа "]),
    _("Emojis", "smiley", 200, ["­Ъўё ", "­ЪўЮ "]),
    _("Lines", "flip", 70, ["_", "_", "_", "-", "`", "`", "'", "┬┤", "-", "_", "_", "_"]),
    _("Lines", "hamburger", 100, ["Рў▒", "Рў▓", "Рў┤"]),
    _("Lines", "lines_1", 130, ["-", "\\", "|", "/"]),
    _("Lines", "lines_2", 100, ["Раѓ", "-", "РђЊ", "Рђћ", "РђЊ", "-"]),
    _("Numbers", "binary", 80, ["010010", "001100", "100101", "111010", "111101", "010111", "101011", "111000", "110011", "110101"]),
    _("Numbers", "percent", 50, ["000", "001", "002", "003", "004", "005", "006", "007", "008", "009", "010", "011", "012", "013", "014", "015", "016", "017", "018", "019", "020", "021", "022", "023", "024", "025", "026", "027", "028", "029", "030", "031", "032", "033", "034", "035", "036", "037", "038", "039", "040", "041", "042", "043", "044", "045", "046", "047", "048", "049", "050", "051", "052", "053", "054", "055", "056", "057", "058", "059", "060", "061", "062", "063", "064", "065", "066", "067", "068", "069", "070", "071", "072", "073", "074", "075", "076", "077", "078", "079", "080", "081", "082", "083", "084", "085", "086", "087", "088", "089", "090", "091", "092", "093", "094", "095", "096", "097", "098", "099", "100"]),
    _("Numbers", "traverse", 200, ["100000", "010000", "001000", "000100", "000010", "000001", "000010", "000100", "001000", "001000", "010000"]),
    _("Numbers", "index", 100, ["000000", "010000", "012000", "012300", "012340", "012345", "012340", "012300", "012000", "010000", "000000"]),
    _("Numbers", "vercel", 80, ["000000", "V01010", "Ve0101", "Ver010", "Verc01", "Verce0", "Vercel", "Vercel", "Vercel", "Verce0", "Verc01", "Ver010", "Ve0101", "V01010", "010101"]),
    _("Squares", "squares_1", 120, ["РќЈ", "Рќј", "РќЇ", "Рќї", "РќІ", "Рќі", "РќЅ", "Рќі", "РќІ", "Рќї", "РќЇ", "Рќј"]),
    _("Squares", "squares_2", 120, ["РќЂ", "РќЃ", "Рќё", "РќЁ", "Рќє", "РќЄ", "Рќє", "РќЁ", "Рќё", "РќЃ"]),
    _("Squares", "squares_3", 120, ["Рќќ", "Рќў", "РќЮ", "РќЌ"]),
    _("Squares", "squares_4", 100, ["Рќї", "Рќђ", "Рќљ", "Рќё"]),
    _("Squares", "squares_5", 100, ["РќЊ", "Рќњ", "РќЉ"]),
    _("Squares", "squares_6", 180, ["РЌ░", "РЌ│", "РЌ▓", "РЌ▒"]),
    _("Squares", "squares_7", 400, [".  ", ".. ", "..."]),
    _("Squares", "squares_8", 200, [".  ", ".. ", "...", " ..", "  ."]),
    _("Squares", "squares_9", 50, ["РЌб", "РЌБ", "РЌц", "РЌЦ"]),
    _("Symbols", "box_3", 100, ["Рћц", "Рћў", "Рћ┤", "Рћћ", "Рћю", "Рћї", "Рћг", "Рћљ"]),
    _("Symbols", "squish", 100, ["РЋФ", "РЋф"]),
    _("Symbols", "star_1", 70, ["РюХ", "РюИ", "Рю╣", "Рю║", "Рю╣", "Рюи"]),
    _("Symbols", "star_2", 80, ["+", "x", "*"]),
    _("Togglers", "togglers_1", 250, ["РіХ", "Ріи"]),
    _("Togglers", "togglers_2", 80, ["РќФ", "Рќф"]),
    _("Togglers", "togglers_3", 120, ["РќА", "Рќа"]),
    _("Togglers", "togglers_4", 100, ["Рќа", "РќА", "Рќф", "РќФ"]),
    _("Togglers", "togglers_5", 100, ["Рќ«", "Рќ»"]),
    _("Togglers", "togglers_6", 300, ["РЃЮ", "РЊё"]),
    _("Togglers", "togglers_7", 80, ["РдЙ", "Рд┐"]),
    _("Togglers", "togglers_8", 100, ["РЌЇ", "РЌї"]),
    _("Togglers", "togglers_9", 100, ["РЌЅ", "РЌј"]),
    _("Togglers", "togglers_10", 100, ["сіѓ", "сіђ", "сіЂ"]),
    _("Togglers", "togglers_11", 50, ["РДЄ", "РДє"]),
    _("Togglers", "togglers_12", 120, ["РўЌ", "Рўќ"]),
    _("Togglers", "togglers_13", 80, ["=", "*", "-"]),
    _("Togglers", "togglers_14", 300, ['РЮѓ', 'Рюф']),
];

export const getLoaders = memoizer((): LoaderProps[] => {
    console.log('getLoaders called!');
    return loaders;
});

export const getAllArrowLoaders = memoizer(() => getAllLoadersFromCategory('Arrows'));
export const getAllBarLoaders = memoizer(() => getAllLoadersFromCategory('Bars'));
export const getAllCircleLoaders = memoizer(() => getAllLoadersFromCategory('Circles'));
export const getAllDotLoaders = memoizer(() => getAllLoadersFromCategory('Dots'));
export const getAllEmojiLoaders = memoizer(() => getAllLoadersFromCategory('Emojis'));
export const getAllLineLoaders = memoizer(() => getAllLoadersFromCategory('Lines'));
export const getAllNumberLoaders = memoizer(() => getAllLoadersFromCategory('Numbers'));
export const getAllSquareLoaders = memoizer(() => getAllLoadersFromCategory('Squares'));
export const getAllSymbolLoaders = memoizer(() => getAllLoadersFromCategory('Symbols'));
export const getAllTogglerLoaders = memoizer(() => getAllLoadersFromCategory('Togglers'));

export const getAllLoadersFromCategory = memoizer((category: string): LoaderProps[] => {
    return getLoaders().filter(loader => loader.category === category);
});

export const getLoaderByName = memoizer((name: string): LoaderProps | undefined => {
    const loader = getLoaders().find(loader => loader.name === name);
    if (!loader) {
        throw new Error(`Loader '${name}' not found`);
    }
    return loader;
});

export const getLoadersByCategory = (category: string): LoaderProps[] => {
    switch (category) {
        case 'Arrows':
            return getAllArrowLoaders();
        case 'Bars':
            return getAllBarLoaders();
        case 'Circles':
            return getAllCircleLoaders();
        case 'Dots':
            return getAllDotLoaders();
        case 'Emojis':
            return getAllEmojiLoaders();
        case 'Lines':
            return getAllLineLoaders();
        case 'Numbers':
            return getAllNumberLoaders();
        case 'Squares':
            return getAllSquareLoaders();
        case 'Symbols':
            return getAllSymbolLoaders();
        case 'Togglers':
            return getAllTogglerLoaders();
        default:
            return [];
    }
};
